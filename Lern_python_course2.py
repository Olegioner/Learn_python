'''Необходимо написать программу, реализующую алгоритм написания этой песни.
Алгоритм выводит в конце предложения следующую в алфавитном порядке букву,
если она встречается в строке текста, а очередную строку отображает уже без этой буквы.'''

'''song = input() + ' запретил букву'
alphabet_ru = [chr(el) for el in range(1072, 1104)]
for i in range(len(alphabet_ru)):
    if alphabet_ru[i] in song:
        s = ' '.join((song + ' ' + alphabet_ru[i]).split())
        print(s)
        while alphabet_ru[i] in song:
            song = song.replace(alphabet_ru[i],'')
    else:
        continue'''

'''Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников.
Теперь он использует их в качестве серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники.
Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр,
и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв),
то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы.'''

'''n = int(input())
n_list = [input() for el in range(n)]
n_list_enemy = []
res = ''
anton = ['a','n','t','o','n']
for i in range(len(n_list)):
    res = ''
    for j in range(len(anton)):
        if anton[j] in n_list[i]:
            ind = n_list[i].find(anton[j])
            n_list[i] =n_list[i][(ind + 1):]
            res += anton[j]
        else:
            continue
    if res == 'anton':
        n_list_enemy.append(i+1)
print(*n_list_enemy)'''


'''Дана строка текста, состоящая из букв русского алфавита "О" и "Р".
Буква "О" соответствует выпадению Орла, а буква "Р" - выпадению Решки.
Напишите программу, которая подсчитывает наибольшее количество подряд выпавших Решек.'''
'''n = input()
count = 0
count_max = 0
for i in range(len(n)):
    if n[i] == 'Р':
        count += 1
    if n[i] == 'О':
        count_max = max(count, count_max)
        count = 0
print(max(count,count_max))
'''

'''Проиграв 10 раз Тимуру, Руслан понял, что так дело дальше не пойдет, и решил усложнить игру. Теперь Тимур и Руслан
играют в игру Камень, ножницы, бумага, ящерица, Спок. Помогите ребятам вновь бросить честный жребий и
определить, кто будет делать следующий модуль в новом курсе.'''
'''all_choices = ['камень', 'ящерица', 'Спок', 'ножницы', 'бумага']
all_result = ['ничья', 'Руслан', 'Тимур', 'Руслан', 'Тимур']
t_choice = all_choices.index(input())
r_choice = all_choices.index(input())
print(all_result[t_choice - r_choice])'''


'''Тимур и Руслан пытаются разделить фронт работы по курсу "Python для профессионалов".
Для этого они решили сыграть в камень, ножницы и бумагу.
Помогите ребятам бросить честный жребий и определить, кто будет делать очередной модуль нового курса.'''

'''all_choices = ['камень', 'ножницы', 'бумага']
t_choice = all_choices.index(input())
r_choice = all_choices.index(input())
choice = str(t_choice - r_choice)

if choice in ['-1', '2']:
    print('Тимур')
elif choice in ['1', '-2']:
    print('Руслан')
elif choice == '0':
    print('ничья')'''




'''Напишите программу для определения, является ли число произведением двух чисел из данного набора.
Программа должна выводить результат в виде ответа «ДА» или «НЕТ».'''
'''n = int(input())
n_list = [int(input()) for el in range(n)]
ml = int(input())
flag = 'НЕТ'
for i in range(len(n_list)):
    if len(n_list) == 1:
        break
    for j in range(i + 1,len(n_list)):
        if n_list[i] * n_list[j] == ml:
            flag = 'ДА'
            break
print(flag)
'''



'''На вход программе подается строка текста, содержащая натуральные числа, расположенные по неубыванию.
Из строки формируется список чисел. Напишите программу для подсчета количества разных элементов в списке.'''
'''n = input().split()
count = 0
for i in range(len(n)):
    if len(n) == 1:
        count = n[0]
        break
    if n[i] != n[i-1]:
        count += 1
print(count)'''


'''На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел. Напишите программу циклического
сдвига элементов списка направо, когда последний элемент становится первым, а остальные сдвигаются на одну позицию вперед, в сторону увеличения индексов.'''
'''n = input().split()
print(*(n[-1:] + n[:-1]))'''


'''На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел.
Напишите программу, которая меняет местами соседние элементы списка (a[0] c a[1], a[2] c a[3] и т.д.).
Если в списке нечетное количество элементов, то последний остается на своем месте.'''
'''n = input().split()
for i in range(1,len(n),2):
    n[i], n[i-1] = n[i-1], n[i]
print(*n)'''



'''На вход программе подается строка текста из натуральных чисел. Из неё формируется список чисел.
Напишите программу подсчета количества чисел, которые больше предшествующего им в этом списке числа,
то есть, стоят вслед за меньшим числом.

n = input().split()
n_list = [int(el) for el in n]
count = 0
for i in range(1,len(n_list)):
    if n_list[i] > n_list[i-1]:
        count += 1

print(count)
'''





'''#Необходимо подсчитать и вывести количество точек, лежащих в каждой координатной четверти.
n = int(input())
xy_list = [input().split() for el in range (n)]
list_xy = []
for i in range(len(xy_list)):
    for j in range(len(xy_list[i])):
        list_xy.append(int(xy_list[i][j]))
first_quarter = 0
second_quarter = 0
third_quarter = 0
fourth_quarter = 0
for i in range(0,len(list_xy),2):
    x = list_xy[i]
    y = list_xy[i+1]
    if x > 0 and y > 0:
        first_quarter += 1
    if x < 0 and y > 0:
        second_quarter += 1
    if x < 0 and y < 0:
        third_quarter += 1
    if x > 0 and y < 0:
        fourth_quarter += 1
print('Первая четверть:', first_quarter)
print('Вторая четверть:', second_quarter)
print('Третья четверть:', third_quarter)
print('Четвертая четверть:', fourth_quarter)'''







'''n человек, пронумерованных числами от 1 до n, стоят в кругу. Они начинают считаться, каждый k-й по счету
человек выбывает из круга,
после чего счет продолжается со следующего за ним человека. Напишите программу, определяющую номер человека,
который останется в кругу последним.'''
'''n = [el for el in range(1,int(input())+1)]
k = int(input())
i = 0
while len(n) != 1:
    i = (i + k - 1) % len(n)
    n.pop(i)
print(*n)
'''





